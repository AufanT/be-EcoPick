version: '3.8'

services:
  # 1. Layanan untuk API Node.js Anda
  api:
    build: .
    container_name: ecopick-api
    ports:
      # Map port 3000 di laptop Anda ke port 3000 di container
      - "3000:3000"
    volumes:
      # Sinkronkan kode Anda saat ini ke /app di container
      # Ini membuat nodemon bisa auto-reload saat Anda save file
      - .:/app
      # Ini trik agar folder node_modules di dalam container yang dipakai,
      # bukan yang ada di laptop Anda (jika ada).
      - /app/node_modules
    env_file:
      # Gunakan file environment khusus untuk Docker
      - .env.docker
    depends_on:
      # Beritahu container ini untuk menunggu database siap
      - db
    networks:
      - ecopick-network

  # 2. Layanan untuk Database MySQL
  db:
    image: mysql:8.0
    container_name: ecopick-db
    environment:
      # Ini akan membuat database 'ecopick_db' saat container pertama kali dibuat
      MYSQL_DATABASE: ecopick_db
      # Anda bisa ganti password ini
      MYSQL_USER: ecopick_user
      MYSQL_PASSWORD: ecopick_password
      MYSQL_ROOT_PASSWORD: root_password_super_secret
    ports:
      # Map port 3307 di laptop Anda ke port 3306 (port MySQL) di container
      # Kita pakai 3307 agar tidak bentrok dengan XAMPP jika masih jalan
      - "3307:3306"
    volumes:
      # Simpan data database secara permanen di volume bernama 'db-data'
      - db-data:/var/lib/mysql
    networks:
      - ecopick-network

# Definisikan 'named volume' untuk database
volumes:
  db-data:

# Definisikan jaringan kustom agar service bisa saling "bicara"
networks:
  ecopick-network:
    driver: bridge